---
eck-elasticsearch:
  enabled: true

  # Name of the Elasticsearch instance.
  #
  fullnameOverride: elasticsearch

  nodeSets:
  - name: default
    count: 1
    # Comment out when setting the vm.max_map_count via initContainer, as these are mutually exclusive.
    # For production workloads, it is strongly recommended to increase the kernel setting vm.max_map_count to 262144
    # and leave node.store.allow_mmap unset.
    # ref: https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-virtual-memory.html
    #
    config:
      node.store.allow_mmap: false

eck-kibana:
  enabled: true

  # Name of the Kibana instance.
  #
  fullnameOverride: kibana

  spec:
    config:
      xpack.fleet.packages:
      - name: apm
        version: latest

  config:
    server:
      publicBaseUrl: https://kibana.alex.dev

  # http:
  #   service:
  #     metadata:
  #       annotations:
  #         # This is required for `ClusterIP` services (which are the default ECK service type) to be used with Ingress in GKE clusters.
  #         cloud.google.com/neg: '{"ingress": true}'
  #         cloud.google.com/app-protocols: '{"https":"HTTPS"}'
  #         cloud.google.com/backend-config: '{"default": "kibana"}'

  ingress:
    enabled: true
    annotations:
      #kubernetes.io/ingress.class: nginx
      #nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      #nginx.ingress.kubernetes.io/ssl-redirect: "true"
      traefik.ingress.kubernetes.io/router.entrypoints: web
    pathType: Prefix
    hosts:
    - host: kibana.alex.dev
      path: "/"
    tls:
      enabled: true


eck-apm-server:
  enabled: true

  # Count of APM Server replicas to create.
  #
  count: 1

  # Reference to ECK-managed Elasticsearch resource.
  #
  elasticsearchRef:
    name: elasticsearch
  kibanaRef:
    name: kibana
  http:
    service:
      spec:
        ports:
        - name: http
          port: 8200
          targetPort: 8200
